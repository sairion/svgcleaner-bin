# Based on the "trust" template v0.1.1
# https://github.com/japaric/trust/tree/v0.1.1

dist: trusty
language: rust
services: docker
sudo: required

# TODO Rust builds on stable by default, this can be
# overridden on a case by case basis down below.
# rust: stable not specified in order to avoid making
# a default job.

env:
  global:
    # TODO Update this to match the name of your project.
    - CRATE_NAME=svgcleaner

matrix:
  # TODO These are all the build jobs. Adjust as necessary. Comment out what you
  # don't need
  include:
    # Linux
    #- env: TARGET=i686-unknown-linux-gnu
    #- env: TARGET=i686-unknown-linux-musl
    - env: TARGET=x86_64-unknown-linux-gnu
    #- env: TARGET=x86_64-unknown-linux-musl

    # OSX
    #- env: TARGET=i686-apple-darwin
    #  os: osx
    # TODO: uncomment this after test
    #- env: TARGET=x86_64-apple-darwin
    #  os: osx

    # *BSD
    #- env: TARGET=i686-unknown-freebsd DISABLE_TESTS=1
    #- env: TARGET=x86_64-unknown-freebsd DISABLE_TESTS=1
    #- env: TARGET=x86_64-unknown-netbsd DISABLE_TESTS=1

    # Other architectures
    #- env: TARGET=aarch64-unknown-linux-gnu
    #- env: TARGET=armv7-unknown-linux-gnueabihf
    #- env: TARGET=mips-unknown-linux-gnu
    #- env: TARGET=mips64-unknown-linux-gnuabi64
    #- env: TARGET=mips64el-unknown-linux-gnuabi64
    #- env: TARGET=mipsel-unknown-linux-gnu
    #- env: TARGET=powerpc-unknown-linux-gnu
    #- env: TARGET=powerpc64-unknown-linux-gnu
    #- env: TARGET=powerpc64le-unknown-linux-gnu
    #- env: TARGET=s390x-unknown-linux-gnu DISABLE_TESTS=1

    # Testing other channels
    #- env: TARGET=x86_64-unknown-linux-gnu
    #  rust: nightly
    #- env: TARGET=x86_64-apple-darwin
    #  os: osx
    #  rust: nightly

before_install:
  - set -e

install:
  - sh install.sh
  - source ~/.cargo/env || true

script:
  - bash script.sh

after_script: set +e

before_deploy:
  - sh before_deploy.sh

deploy:
  # TODO update `api_key.secure`
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it: `travis encrypt YOUR_TOKEN`
  # - Paste the output down here
  api_key:
    secure: "EeREipLC7k7Op9PO8k3TH7TM8Ti37RoXiZkYtwaARyGVydZhiaMZcxgVWwEk3On0LMcA6sKX5sQHIB8du1PrDk+j7g44KCKwS6wscz9D8IVVEbRLnXljd8epI2bBw02FtxzgY3uVZgCE14vvZca9P5dONxpGRnLn3yTyjSNucPow4OecUYMQgxOkNhIrJOP9nDCF3YffkRH6wbj1rUXcq4BmsJaNda6buOGOiSwUJwbbPoob079bU4aOYUN0l+lubRkjZ9PWKyro4uxWOKrWXNlXWMQr+YSPOaaCvRj2YqiOOvvsjcm3sLkMB0JkcpMk+CREh8tu7DlrCxU9O9xejllDMpD6yYETIWgfA4aHh5QMNROx2rpjKD6yOTC5jo89eDbkb2mStCAIfmz2FwrVXRU3NlHWaxjM1l3ut/torMwea7XeyKkVSSC4M1t3EQYcBiwTfcsdRw4g2VZYkqkrWq0gUEfB4ZegK2o4m3CPf9suLchxlES5Vahgq/IiniwDwM/hXpzcqJVHPXPmneDY32K/RL96WUBV1ukTGYgIW/A/yTtiegYlHz5TIUHX79TK0XaadTKVvlbdE41svpJ/u3EAJxhwW3JWZB/w9O6OaploRIKm+savD9CAm7iYQBAEeWLbUChtDTqQUdJH3SeE6TvWfOmkYvDH9ZRS6dZbUis="
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    # TODO Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases
  skip_cleanup: true

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

notifications:
  email:
    on_success: never
